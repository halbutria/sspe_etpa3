// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SispeServicios.Api.Intermediacion.Persistencia;

#nullable disable

namespace SispeServicios.Api.Intermediacion.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20221214204553_124")]
    partial class _124
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaSedeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PuntoAtencionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("EmpresaSede");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaSedeUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EmpresaSedeId")
                        .HasColumnType("int");

                    b.Property<Guid>("EmpresaUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaSedeId");

                    b.HasIndex("EmpresaUsuarioId");

                    b.ToTable("EmpresaSedeUsuario");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaUsuario");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteArchivoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreArchivoRepositorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteArchivo");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteCambioEstadoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteCambioEstado");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteCondicionSaludMentalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("CondicionSaludMentalId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteCondicionSaludMental");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteConocimientoCompetenciaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("ConocimientoCompetenciaId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteConocimientosCompetencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteDenominacionRelacionadaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("DenominacionRelacionadaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteDenominacionRelacionada");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteDiscapacidadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int>("DiscapacidadId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteDiscapacidad");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteEstadoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VacanteEstado");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteGrupoEtnicoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("GrupoEtnicoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteGrupoEtnico");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteHabilidadDestrezaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("HabilidadDestrezaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteHabilidadDestreza");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteIdiomaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<int>("NivelConversacionalId")
                        .HasColumnType("int");

                    b.Property<int>("NivelEscrituraId")
                        .HasColumnType("int");

                    b.Property<int>("NivelEscuchaId")
                        .HasColumnType("int");

                    b.Property<int>("NivelLecturaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteIdioma");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool?>("AptaParaPersonasConDiscapacidad")
                        .HasColumnType("bit");

                    b.Property<int?>("AreaEmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaLicenciaCarroId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaLicenciaMotoId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoInternoVacante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CompensacionAdicional")
                        .HasColumnType("bit");

                    b.Property<bool?>("Confidencial")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCapacitacionEspecifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCertificacionEspecifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCompensacionAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionExperienciaEspecifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("FechaEstimadaOcupacionCargo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaLimiteEnvioHv")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("FechaVencimientoVacante")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormacionTitulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GestionadaPorPrestador")
                        .HasColumnType("bit");

                    b.Property<bool?>("GetionadaPorPrestadorAlterno")
                        .HasColumnType("bit");

                    b.Property<bool?>("Graduado")
                        .HasColumnType("bit");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformacionAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JornadaLaboralId")
                        .HasColumnType("int");

                    b.Property<bool?>("ManoObraCalificada")
                        .HasColumnType("bit");

                    b.Property<int?>("ModalidadTrabajoId")
                        .HasColumnType("int");

                    b.Property<int?>("NivelMinimoEstudioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeriodicidadSalarialId")
                        .HasColumnType("int");

                    b.Property<bool?>("PerteneceARural")
                        .HasColumnType("bit");

                    b.Property<bool?>("PriorizarPoblacionVulnerable")
                        .HasColumnType("bit");

                    b.Property<bool?>("PriorizarZonaRural")
                        .HasColumnType("bit");

                    b.Property<int?>("PuestosRequeridos")
                        .HasColumnType("int");

                    b.Property<int?>("RangoRemitirCandidatoFinal")
                        .HasColumnType("int");

                    b.Property<int?>("RangoRemitirCandidatoInicial")
                        .HasColumnType("int");

                    b.Property<int?>("RangoSalarialFinal")
                        .HasColumnType("int");

                    b.Property<int?>("RangoSalarialInicial")
                        .HasColumnType("int");

                    b.Property<bool?>("RegistroVacanteDemasPrestadores")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereCapacitacionEspecifica")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereCertificacionEspecifica")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereExperienciaEspecifica")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereExperienciaGeneral")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereLicenciaConduccion")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereLicenciaConduccionCarro")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereLicenciaConduccionMoto")
                        .HasColumnType("bit");

                    b.Property<bool?>("RequiereViajarPorTrabajo")
                        .HasColumnType("bit");

                    b.Property<Guid>("ResponsableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SectorEconomicoId")
                        .HasColumnType("int");

                    b.Property<int?>("SedeId")
                        .HasColumnType("int");

                    b.Property<string>("SolicitudAutorizacionExcepcionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SolicitudExcepcionalidad")
                        .HasColumnType("bit");

                    b.Property<int?>("SubsectorEconomicoId")
                        .HasColumnType("int");

                    b.Property<bool?>("TendraPersonasCargo")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TiempoExperiencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("TieneVideoAdjunto")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoProyecto")
                        .HasColumnType("int");

                    b.Property<int?>("TipoSalarioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VisibilidadSalario")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteMotivoExcepcionalidadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MotivosExcepcionalidadId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteMotivoExcepcionalidad");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacantePoblacionVulnerableModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PoblacionVulnerableId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacantePoblacionVulnerable");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacantePrestadorAlternoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("PrestadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacantePrestadorAlterno");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteTipoPoblacionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TipoPoblacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteTipoPoblacion");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteUbicacionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("DepartamentoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LocalidadComunaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPuestos")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VacanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VacanteId");

                    b.ToTable("VacanteUbicacion");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaSedeModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.EmpresaModel", "Empresa")
                        .WithMany("Sedes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaSedeUsuarioModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.EmpresaSedeModel", "EmpresaSede")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaSedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.EmpresaUsuarioModel", "EmpresaUsuario")
                        .WithMany("Responsables")
                        .HasForeignKey("EmpresaUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaSede");

                    b.Navigation("EmpresaUsuario");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteArchivoModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("Archivos")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteCambioEstadoModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteEstadoModel", "Estado")
                        .WithMany("VacantesCambioEstados")
                        .HasForeignKey("EstadoId");

                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("VacanteCambioEstados")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteCondicionSaludMentalModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("CondicionesSaludMental")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteConocimientoCompetenciaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("ConocimientosCompetencias")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteDenominacionRelacionadaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("DenominacionesRelacionadas")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteDiscapacidadModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("Discapacidades")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteGrupoEtnicoModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("GruposEtnicos")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteHabilidadDestrezaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("HabilidadesDestrezas")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteIdiomaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("Idiomas")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteEstadoModel", "Estado")
                        .WithMany("Vacantes")
                        .HasForeignKey("EstadoId");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteMotivoExcepcionalidadModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("MotivosExcepcionalidad")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacantePoblacionVulnerableModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("PoblacionesVulnerables")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacantePrestadorAlternoModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("PrestadoresAlternos")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteTipoPoblacionModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("TiposPoblacion")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteUbicacionModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", "Vacante")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("VacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaModel", b =>
                {
                    b.Navigation("Sedes");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaSedeModel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.EmpresaUsuarioModel", b =>
                {
                    b.Navigation("Responsables");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteEstadoModel", b =>
                {
                    b.Navigation("Vacantes");

                    b.Navigation("VacantesCambioEstados");
                });

            modelBuilder.Entity("SispeServicios.Api.Intermediacion.Modelo.VacanteModel", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("CondicionesSaludMental");

                    b.Navigation("ConocimientosCompetencias");

                    b.Navigation("DenominacionesRelacionadas");

                    b.Navigation("Discapacidades");

                    b.Navigation("GruposEtnicos");

                    b.Navigation("HabilidadesDestrezas");

                    b.Navigation("Idiomas");

                    b.Navigation("MotivosExcepcionalidad");

                    b.Navigation("PoblacionesVulnerables");

                    b.Navigation("PrestadoresAlternos");

                    b.Navigation("TiposPoblacion");

                    b.Navigation("Ubicaciones");

                    b.Navigation("VacanteCambioEstados");
                });
#pragma warning restore 612, 618
        }
    }
}
