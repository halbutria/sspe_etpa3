// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SispeServicios.Api.Ciudadano.Persistencia;

#nullable disable

namespace SispeServicios.Api.Ciudadano.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20221214012730_addcampoisdocumentadicional")]
    partial class addcampoisdocumentadicional
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoCargoInteresModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CargoInteresId")
                        .HasColumnType("int");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoCargoInteresModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoConocimientoCompetenciaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ConocimientoId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("RutaCertificado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoConocimientoCompetenciaModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AreaConocimientoId")
                        .HasColumnType("int");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("FechaExpedicionTarjetaProfesional")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NivelEducativoId")
                        .HasColumnType("int");

                    b.Property<int>("NucleoConocimientoId")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroTarjetaProfesional")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<bool>("PracticaEmpresarial")
                        .HasColumnType("bit");

                    b.Property<bool>("TarjetaProfesional")
                        .HasColumnType("bit");

                    b.Property<int>("TituloHomologadoId")
                        .HasColumnType("int");

                    b.Property<string>("TituloObtenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoEducacionFormalModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionNoFormalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Duracion")
                        .HasColumnType("decimal(2,1)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCertificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePrograma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("TipoCertificadoCapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoEducacionNoFormal", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ConExperiencia")
                        .HasColumnType("bit");

                    b.Property<int>("ConocimientoId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<int>("HabilidadId")
                        .HasColumnType("int");

                    b.Property<string>("LugarExperiencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OcupacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<int>("TipoExperienciaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoExperienciaModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoHabilidadDestrezaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("HabilidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("RutaCertificado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoHabilidadDestrezaModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoIdiomaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<string>("NivelEscrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelEscucha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelHablado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoIdiomaModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoInformacionLaboralModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CargoEquivalenteId")
                        .HasColumnType("int");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ConocimientoId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<int>("HabilidadId")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OcupacionEquivalenteId")
                        .HasColumnType("int");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoExperienciaId")
                        .HasColumnType("int");

                    b.Property<bool>("TrabajoActual")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoInformacionLaboralModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("BarrioResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoriaLicenciaCarroId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaLicenciaMotoId")
                        .HasColumnType("int");

                    b.Property<string>("CertificadoResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CondicionDiscapacidadId")
                        .HasColumnType("int");

                    b.Property<int?>("CondicionSaludMentalId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartamentoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartamentoNacimientoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("EpsId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<int?>("Estrato")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int?>("GrupoEtnicoId")
                        .HasColumnType("int");

                    b.Property<bool?>("InteresOfertasTeletrabajo")
                        .HasColumnType("bit");

                    b.Property<bool?>("InteresPracticaEmpresarial")
                        .HasColumnType("bit");

                    b.Property<bool?>("JefeHogar")
                        .HasColumnType("bit");

                    b.Property<string>("LibretaMiltar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LicenciaConduccionCarroId")
                        .HasColumnType("bit");

                    b.Property<bool?>("LicenciaConduccionMoto")
                        .HasColumnType("bit");

                    b.Property<string>("MunicipioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipioNacimientoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumentoAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisNacimientoId")
                        .HasColumnType("int");

                    b.Property<int>("PaisResidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("PerfilLaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int?>("PerteneceAId")
                        .HasColumnType("int");

                    b.Property<bool?>("PoblacionFocalizada")
                        .HasColumnType("bit");

                    b.Property<float?>("PorcentajeEduFormal")
                        .HasColumnType("real");

                    b.Property<float?>("PorcentajeEduNoFormal")
                        .HasColumnType("real");

                    b.Property<float?>("PorcentajeHv")
                        .HasColumnType("real");

                    b.Property<float?>("PorcentajeInfoLaboral")
                        .HasColumnType("real");

                    b.Property<float?>("PorcentajeInfoPersonal")
                        .HasColumnType("real");

                    b.Property<bool?>("PosibilidadTrasladarse")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosibilidadViajar")
                        .HasColumnType("bit");

                    b.Property<int?>("PreguntaSeguridadId")
                        .HasColumnType("int");

                    b.Property<string>("PreguntaSeguridadRespuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrestadorPreferenciaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PropiedadMedioTransporte")
                        .HasColumnType("bit");

                    b.Property<string>("PuntoAtencionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RangoSalarialId")
                        .HasColumnType("int");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Sisben")
                        .HasColumnType("bit");

                    b.Property<int?>("SituacionLaboralActualId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TerminosCondiciones")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneEducacionFormal")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneEducacionNoFormal")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneExperiaciaLaboral")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoDocumentoAdicional")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPoblacionId")
                        .HasColumnType("int");

                    b.Property<bool>("TratamientoDatosPersonales")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CiudadanoModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoRedesSocialesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreRedSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuarioRedSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoRedesSociales", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoTipoNotificacionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoNotificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoTipoNotificacionModel", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                        {
                            ttb
                                .HasPeriodStart("PeriodStart")
                                .HasColumnName("PeriodStart");
                            ttb
                                .HasPeriodEnd("PeriodEnd")
                                .HasColumnName("PeriodEnd");
                        }
                    ));
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoCargoInteresModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("CargoInteres")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoConocimientoCompetenciaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany()
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormal", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("EducacionFormal")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionNoFormalModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("EducacionNoFormal")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany()
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoHabilidadDestrezaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany()
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoIdiomaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany()
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoInformacionLaboralModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("InformacionLaboral")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoRedesSocialesModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany()
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoTipoNotificacionModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("TipoNotificacion")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", b =>
                {
                    b.Navigation("CargoInteres");

                    b.Navigation("EducacionFormal");

                    b.Navigation("EducacionNoFormal");

                    b.Navigation("InformacionLaboral");

                    b.Navigation("TipoNotificacion");
                });
#pragma warning restore 612, 618
        }
    }
}
