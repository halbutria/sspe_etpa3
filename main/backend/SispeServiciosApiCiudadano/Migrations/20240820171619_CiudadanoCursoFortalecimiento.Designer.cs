// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SispeServicios.Api.Ciudadano.Persistencia;

#nullable disable

namespace SispeServiciosApiCiudadano.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240820171619_CiudadanoCursoFortalecimiento")]
    partial class CiudadanoCursoFortalecimiento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoCargoInteresModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CargoInteresId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoIntertesAnteriorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoCargoInteres");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoCondicionMentalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CondicionMentalId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoCondicionMental");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoConocimientoCompetenciaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConocimientoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoConocimientoCompetencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoCursoFortalecimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CursoFortalecimientoId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoCurso")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ObtuvoCertificado")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CiudadanoCursoFortalecimiento");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDireccionComplementoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoDireccionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplementoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplementoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoDireccionId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoDireccionComplemento");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDireccionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ViaGeneradora")
                        .HasColumnType("int");

                    b.Property<string>("ViaGeneradoraCuadranteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaGeneradoraCuadranteNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaGeneradoraLetraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ViaGeneradoraPlaca")
                        .HasColumnType("int");

                    b.Property<string>("ViaGeneralLetraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalBisId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalBisNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalCuadranteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalCuadranteNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalLetraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalLetraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalSegundaLetraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalSegundaLetraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoDireccion");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDiscapacidadesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisacapacidaId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoDiscapacidad");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormalExperienciaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoEducacionFormalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CiudadanoExperienciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoEducacionFormalId");

                    b.HasIndex("CiudadanoExperienciaId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoEducacionFormalExperiencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<int?>("AreaConocimientoId")
                        .HasColumnType("int");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("FechaExpedicionTarjetaProfesional")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<string>("Institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstitucionId")
                        .HasColumnType("int");

                    b.Property<int>("NivelEducativoId")
                        .HasColumnType("int");

                    b.Property<int?>("NucleoConocimientoId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroTarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.Property<bool>("PracticaEmpresarial")
                        .HasColumnType("bit");

                    b.Property<bool?>("TarjetaProfesional")
                        .HasColumnType("bit");

                    b.Property<int?>("TituloHomologadoId")
                        .HasColumnType("int");

                    b.Property<string>("TituloObtenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.HasIndex("NivelEducativoId");

                    b.ToTable("CiudadanoEducacionFormal");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionNoFormalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCertificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePrograma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<int>("TipoCertificadoCapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoEducacionNoFormal");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<string>("LugarExperiencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OcupacionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoExperienciaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoExperiencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoGrupoEtnicoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("GrupoEtnicoId")
                        .HasColumnType("int");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoGrupoEtnico");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoHabilidadDestrezaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("HabilidadId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoHabilidadDestreza");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoIdiomaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<string>("NivelEscrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelEscucha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelHablado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelLectura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoIdioma");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoInformacionLaboralModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CuantasPresonasTrabajanConUsted")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Funciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OcupacionEquivalenteAnteriorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OcupacionEquivalenteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("ProductoServicioProduceComercializa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoExperienciaId")
                        .HasColumnType("int");

                    b.Property<bool>("TrabajoActual")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoInformacionLaboral");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Autorregistro")
                        .HasColumnType("bit");

                    b.Property<string>("BarrioResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoriaLicenciaCarroId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaLicenciaMotoId")
                        .HasColumnType("int");

                    b.Property<bool?>("CertificadoResidencia")
                        .HasColumnType("bit");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiudadNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CualGenero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CualOrientacionSexual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartamentoNacimientoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartamentoResidenciaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DispuestoCambiarMunicipio")
                        .HasColumnType("bit");

                    b.Property<bool?>("DispuestoDesplazarseDiariamente")
                        .HasColumnType("bit");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("EpsId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadoCiudadanoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Estrato")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("FechaExpedicionDocumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTerminosCondiciones")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTratamientoDatos")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<bool?>("HojaVidaCompleta")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<bool?>("InteresOfertasTeletrabajo")
                        .HasColumnType("bit");

                    b.Property<bool?>("InteresPracticaEmpresarial")
                        .HasColumnType("bit");

                    b.Property<bool?>("JefeHogar")
                        .HasColumnType("bit");

                    b.Property<int?>("LocalidadComunaId")
                        .HasColumnType("int");

                    b.Property<string>("MunicipioNacimientoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipioResidenciaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NacionalidadId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NumeroDocumentoAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroLibretaMiltar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrientacionSexualId")
                        .HasColumnType("int");

                    b.Property<string>("OtroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisNacimientoId")
                        .HasColumnType("int");

                    b.Property<int>("PaisResidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("PerfilLaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PerteneceARural")
                        .HasColumnType("bit");

                    b.Property<bool?>("PoblacionFocalizada")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PorcentajeEduFormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PorcentajeEduNoFormal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PorcentajeHv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PorcentajeInfoLaboral")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PorcentajeInfoPersonal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PorcentajeRegistro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("PosibilidadTrasladarse")
                        .HasColumnType("bit");

                    b.Property<bool?>("PosibilidadViajar")
                        .HasColumnType("bit");

                    b.Property<string>("PreguntaLibre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreguntaSeguridadId")
                        .HasColumnType("int");

                    b.Property<string>("PreguntaSeguridadRespuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrestadorPreferenciaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("PropiedadMedioTransporte")
                        .HasColumnType("bit");

                    b.Property<string>("PuntoAtencionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RangoSalarialId")
                        .HasColumnType("int");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Sisben")
                        .HasColumnType("bit");

                    b.Property<int?>("SituacionLaboralActualId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TerminosCondiciones")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneEducacionFormal")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneEducacionNoFormal")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneExperienciaLaboral")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneInformacionLaboral")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneLibretaMilitar")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneLicenciaConduccionCarro")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneLicenciaConduccionMoto")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoDocumentoAdicionalId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoLibretaMilitarId")
                        .HasColumnType("int");

                    b.Property<bool>("TratamientoDatosPersonales")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CorreoElectronico");

                    b.HasIndex("Eliminado");

                    b.HasIndex("FechaCreacion");

                    b.HasIndex("GeneroId");

                    b.HasIndex("NacionalidadId");

                    b.HasIndex("NumeroDocumento");

                    b.HasIndex("PaisResidenciaId");

                    b.HasIndex("PrimerApellido");

                    b.HasIndex("PrimerNombre");

                    b.HasIndex("SegundoApellido");

                    b.HasIndex("SegundoNombre");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoPersonaDireccionComplementoViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdComplemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComplemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComplementoDireccion", "People");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoPersonaViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("BarrioResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartamentoResidenciaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionResidencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaExpedicionDocumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalidadComunaId")
                        .HasColumnType("int");

                    b.Property<string>("MunicipioResidenciaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisResidenciaId")
                        .HasColumnType("int");

                    b.Property<bool>("PerteneceARural")
                        .HasColumnType("bit");

                    b.Property<string>("PreguntaLibre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreguntaSeguridadId")
                        .HasColumnType("int");

                    b.Property<string>("PreguntaSeguridadRespuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrestadorPreferenciaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PuntoAtencionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SexoId")
                        .HasColumnType("int");

                    b.Property<string>("SignoNumero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TerminosCondiciones")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("ViaGeneradora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaGeneradoraCuadranteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaGeneradoraCuadranteNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaGeneradoraLetraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaGeneradoraPlaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaGeneralLetraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalBisId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalBisNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalCuadranteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalCuadranteNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalLetraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalLetraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalSegundaLetraId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViaPrincipalSegundaLetraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CiudadanoPersona");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoRedesSocialesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NombreRedSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuarioRedSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RedSocialId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoRedesSociales");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoTipoNotificacionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoNotificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.ToTable("CiudadanoTipoNotificacion");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoTipoPoblacionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("IdCarga")
                        .HasColumnType("int");

                    b.Property<int>("TipoPoblacionId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoTipoPoblacion");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.ConfiguracionAvanceHojaVidaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Avance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracionAvanceHojaVida");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.ConocimientoCompetenciaExperienciaPreviaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CiudadanoExperienciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConocimientoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoExperienciaId");

                    b.HasIndex("Eliminado");

                    b.ToTable("CiudadanoConocimientoCompetenciaExperienciaPrevia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.ConocimientoCompetenciaInformacionLaboralModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ConocimientoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("InformacionLaboralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Eliminado");

                    b.HasIndex("InformacionLaboralId");

                    b.ToTable("CiudadanoConocimientoCompetenciaInformacionLaboral");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.HabilidadDestrezaExperienciaPreviaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("ExperienciapreviaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("HabilidadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Eliminado");

                    b.HasIndex("ExperienciapreviaId");

                    b.ToTable("CiudadanoHabilidadDestrezaExperienciaPrevia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.HabilidadDestrezaInformacionLaboralModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("HabilidadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InformacionLaboralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Eliminado");

                    b.HasIndex("InformacionLaboralId");

                    b.ToTable("CiudadanoHabilidadDestrezaInformacionLaboral");
                });

            modelBuilder.Entity("SispeServiciosApiCiudadano.Modelo.Parametricos.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("SispeServiciosApiCiudadano.Modelo.Parametricos.NivelEducativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("RegistraInstitucion")
                        .HasColumnType("bit");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NivelEducativo");
                });

            modelBuilder.Entity("SispeServiciosApiCiudadano.Modelo.Parametricos.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("FechaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("SispeServiciosApiCiudadano.Modelo.PersonaModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPersona")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cliente", "People");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoCargoInteresModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("CargoInteres")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoCondicionMentalModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("CondicionMental")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoConocimientoCompetenciaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany()
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDireccionComplementoModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDireccionModel", "CiudadanoDireccion")
                        .WithMany("DireccionComplemento")
                        .HasForeignKey("CiudadanoDireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CiudadanoDireccion");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDireccionModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("Direcciones")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDiscapacidadesModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("Discapacidad")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormalExperienciaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormalModel", "CiudadanoEducacionFormal")
                        .WithMany("CiudadanoEducacionFormalExperiencia")
                        .HasForeignKey("CiudadanoEducacionFormalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", "CiudadanoExperiencia")
                        .WithMany("CiudadanoEducacionFormalExperiencia")
                        .HasForeignKey("CiudadanoExperienciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CiudadanoEducacionFormal");

                    b.Navigation("CiudadanoExperiencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormalModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("EducacionFormal")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SispeServiciosApiCiudadano.Modelo.Parametricos.NivelEducativo", "NivelEducativo")
                        .WithMany()
                        .HasForeignKey("NivelEducativoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");

                    b.Navigation("NivelEducativo");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionNoFormalModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("EducacionNoFormal")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("ExperienciaPrevia")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoGrupoEtnicoModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("GrupoEtnico")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoHabilidadDestrezaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("Destrezas")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoIdiomaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("Idiomas")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoInformacionLaboralModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("InformacionLaboral")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", b =>
                {
                    b.HasOne("SispeServiciosApiCiudadano.Modelo.Parametricos.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId");

                    b.HasOne("SispeServiciosApiCiudadano.Modelo.Parametricos.Pais", "Nacionalidad")
                        .WithMany()
                        .HasForeignKey("NacionalidadId");

                    b.HasOne("SispeServiciosApiCiudadano.Modelo.Parametricos.Pais", "PaisResidencia")
                        .WithMany()
                        .HasForeignKey("PaisResidenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Nacionalidad");

                    b.Navigation("PaisResidencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoRedesSocialesModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("RedSocial")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoTipoNotificacionModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("TipoNotificacion")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoTipoPoblacionModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", "Ciudadano")
                        .WithMany("TipoPoblacion")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.ConocimientoCompetenciaExperienciaPreviaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", "CiudadanoExperiencia")
                        .WithMany("ConocimientoCompetenciaExperienciaPrevia")
                        .HasForeignKey("CiudadanoExperienciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CiudadanoExperiencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.ConocimientoCompetenciaInformacionLaboralModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoInformacionLaboralModel", "InformacionLaboral")
                        .WithMany("ConocimientoCompetenciaInformacionLaboral")
                        .HasForeignKey("InformacionLaboralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InformacionLaboral");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.HabilidadDestrezaExperienciaPreviaModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", "Experienciaprevia")
                        .WithMany("HabilidadDestrezaExperienciaPrevia")
                        .HasForeignKey("ExperienciapreviaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Experienciaprevia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.HabilidadDestrezaInformacionLaboralModel", b =>
                {
                    b.HasOne("SispeServicios.Api.Ciudadano.Modelo.CiudadanoInformacionLaboralModel", "InformacionLaboral")
                        .WithMany("HabilidadDestrezaInformacionLaboral")
                        .HasForeignKey("InformacionLaboralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InformacionLaboral");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoDireccionModel", b =>
                {
                    b.Navigation("DireccionComplemento");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoEducacionFormalModel", b =>
                {
                    b.Navigation("CiudadanoEducacionFormalExperiencia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoExperienciaModel", b =>
                {
                    b.Navigation("CiudadanoEducacionFormalExperiencia");

                    b.Navigation("ConocimientoCompetenciaExperienciaPrevia");

                    b.Navigation("HabilidadDestrezaExperienciaPrevia");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoInformacionLaboralModel", b =>
                {
                    b.Navigation("ConocimientoCompetenciaInformacionLaboral");

                    b.Navigation("HabilidadDestrezaInformacionLaboral");
                });

            modelBuilder.Entity("SispeServicios.Api.Ciudadano.Modelo.CiudadanoModel", b =>
                {
                    b.Navigation("CargoInteres");

                    b.Navigation("CondicionMental");

                    b.Navigation("Destrezas");

                    b.Navigation("Direcciones");

                    b.Navigation("Discapacidad");

                    b.Navigation("EducacionFormal");

                    b.Navigation("EducacionNoFormal");

                    b.Navigation("ExperienciaPrevia");

                    b.Navigation("GrupoEtnico");

                    b.Navigation("Idiomas");

                    b.Navigation("InformacionLaboral");

                    b.Navigation("RedSocial");

                    b.Navigation("TipoNotificacion");

                    b.Navigation("TipoPoblacion");
                });
#pragma warning restore 612, 618
        }
    }
}
